[{"C:\\project\\shoes_selling\\src\\index.js":"1","C:\\project\\shoes_selling\\src\\reportWebVitals.js":"2","C:\\project\\shoes_selling\\src\\App.js":"3","C:\\project\\shoes_selling\\src\\productList.js":"4","C:\\project\\shoes_selling\\src\\Summary.js":"5","C:\\project\\shoes_selling\\src\\productPage.js":"6","C:\\project\\shoes_selling\\src\\ProductHeader.js":"7","C:\\project\\shoes_selling\\src\\firebase.js":"8","C:\\project\\shoes_selling\\src\\TrendingProducts.js":"9","C:\\project\\shoes_selling\\src\\FilterForm.js":"10","C:\\project\\shoes_selling\\src\\takeAllCheckBoxTrue.js":"11","C:\\project\\shoes_selling\\src\\ProductItem.js":"12","C:\\project\\shoes_selling\\src\\Searching-Product\\SearchingProduct.js":"13","C:\\project\\shoes_selling\\src\\FavoritePage\\Favorite.js":"14","C:\\project\\shoes_selling\\src\\DetailPage\\DetailPage.js":"15","C:\\project\\shoes_selling\\src\\Cart\\Cart.js":"16","C:\\project\\shoes_selling\\src\\product.js":"17","C:\\project\\shoes_selling\\src\\filter.js":"18"},{"size":449,"mtime":1612158955455,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":5683,"mtime":1648490488949,"results":"22","hashOfConfig":"20"},{"size":3098,"mtime":1661662582269,"results":"23","hashOfConfig":"20"},{"size":3070,"mtime":1640813671555,"results":"24","hashOfConfig":"20"},{"size":2468,"mtime":1648489123122,"results":"25","hashOfConfig":"20"},{"size":3728,"mtime":1661741783242,"results":"26","hashOfConfig":"20"},{"size":545,"mtime":1623133984778,"results":"27","hashOfConfig":"20"},{"size":2812,"mtime":1641064331220,"results":"28","hashOfConfig":"20"},{"size":7293,"mtime":1639976110598,"results":"29","hashOfConfig":"20"},{"size":281,"mtime":1624140652349,"results":"30","hashOfConfig":"20"},{"size":2876,"mtime":1641061747183,"results":"31","hashOfConfig":"20"},{"size":2423,"mtime":1640635831164,"results":"32","hashOfConfig":"20"},{"size":2637,"mtime":1640722252252,"results":"33","hashOfConfig":"20"},{"size":3148,"mtime":1640902432643,"results":"34","hashOfConfig":"20"},{"size":3672,"mtime":1641061744743,"results":"35","hashOfConfig":"20"},{"size":1647,"mtime":1661662013038,"results":"36","hashOfConfig":"20"},{"size":1097,"mtime":1661660993207,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"14h9trl",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},"C:\\project\\shoes_selling\\src\\index.js",[],["87","88"],"C:\\project\\shoes_selling\\src\\reportWebVitals.js",[],"C:\\project\\shoes_selling\\src\\App.js",["89","90","91"],"import './App.css';\r\nimport React, { useState, useEffect } from 'react'\r\nimport ProductPage from './productPage'\r\nimport CartPage from './Cart/Cart'\r\nimport Favorite from './FavoritePage/Favorite';\r\nimport DetailPage from './DetailPage/DetailPage';\r\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\r\nimport { IoCartOutline } from 'react-icons/io5'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport SearchingProduct from './Searching-Product/SearchingProduct';\r\nimport { db } from './firebase'\r\n\r\nfunction App() {\r\n  const _ = require('lodash');\r\n  const [detailProduct, setDetailProduct] = useState()\r\n  const [cartLength, setCartLength] = useState(0);\r\n\r\n  // functionality for cart\r\n  //get cart length\r\n  useEffect(() => {\r\n    db.collection('cart').onSnapshot((snapshot) => {\r\n      let tempData = []\r\n      tempData = snapshot.docs.map((doc) => (\r\n        {\r\n          id: doc.id,\r\n          product: doc.data()\r\n        }\r\n      ))\r\n      let cartQuantity = tempData.reduce((acc, product) => acc += product.product.quantity, 0);\r\n      setCartLength(cartQuantity);\r\n    })\r\n  }, [])\r\n  const addToCart = (product, img, e) => {\r\n    e.preventDefault()\r\n\r\n    const cartList = db.collection(\"cart\").doc(product.id + \"_\" + img)\r\n    console.log(product.id + \"_\" + img);\r\n    cartList.get()\r\n      .then(doc => {\r\n        if (!doc.exists) {\r\n          cartList.set({\r\n            name: product.product.name,\r\n            description: product.product.description,\r\n            gender: product.product.gender,\r\n            category: product.product.category,\r\n            img: product.product.img,\r\n            price: product.product.price,\r\n            quantity: 1\r\n          })\r\n        }\r\n        else {\r\n          cartList.update({\r\n            quantity: doc.data().quantity + 1\r\n          })\r\n        }\r\n      })\r\n    //old way\r\n  }\r\n  const removeItem = (productID) => {\r\n    db.collection(\"cart\").doc(productID).delete();\r\n  }\r\n  const addQuantity = (product, e) => {\r\n    e.preventDefault();\r\n    const updateProduct = db.collection(\"cart\").doc(product.id)\r\n    updateProduct.get()\r\n      .then((doc) => {\r\n        updateProduct.update({\r\n          quantity: doc.data().quantity + 1\r\n        })\r\n      })\r\n  }\r\n  const minusQuantity = (product) => {\r\n    const updateProduct = db.collection(\"cart\").doc(product.id)\r\n    updateProduct.get()\r\n      .then(doc => {\r\n        if (doc.data().quantity == 1) {\r\n          updateProduct.delete()\r\n        }\r\n        else {\r\n          updateProduct.update({\r\n            quantity: doc.data().quantity - 1\r\n          })\r\n        }\r\n      })\r\n\r\n    //old way\r\n  }\r\n  const changeDetailProduct = (detailProduct) => {\r\n    setDetailProduct(detailProduct)\r\n    console.log(detailProduct)\r\n  }\r\n  //functionality for favorite\r\n  const addToFavorite = (e, product) => {\r\n    const favoriteList = db.collection(\"favorite\").doc(product.id);\r\n    favoriteList.get()\r\n      .then(doc => {\r\n        if (!doc.exists) {\r\n          db.collection(\"favorite\").doc(product.id).set({\r\n            name: product.product.name,\r\n            description: product.product.description,\r\n            gender: product.product.gender,\r\n            category: product.product.category,\r\n            img: product.product.img,\r\n            price: product.product.price\r\n          })\r\n        }\r\n        else return;\r\n      })\r\n    e.preventDefault();\r\n  }\r\n  const removeFromFavorite = (id) => {\r\n\r\n    console.log(id);\r\n    db.collection(\"favorite\").doc(id).delete();\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <nav>\r\n          <ul>\r\n            <img src=\"https://images.template.net/wp-content/uploads/2016/08/08090604/Soccer-Shoe-Logo.jpg\" height=\"50px\" />\r\n            <NavLink to='/shoes-selling/' className='nav__homePage'>Home</NavLink>\r\n            <NavLink to=\"/Favorite\"><li>Favorite</li></NavLink>\r\n\r\n          </ul>\r\n\r\n          <SearchingProduct changeDetailProduct={changeDetailProduct} />\r\n\r\n          <NavLink to='/cart'>\r\n            <div className='nav__cart '>\r\n              <IoCartOutline className='cart_icon' />\r\n              <div className='nav__cart__amount'>{cartLength}</div>\r\n            </div>\r\n          </NavLink>\r\n        </nav>\r\n\r\n\r\n\r\n        <Route render={({ location }) => (\r\n          <TransitionGroup>\r\n            <CSSTransition timeout={150} classNames='fade' key={location.key}>\r\n              <Switch >\r\n                <Route path='/shoes-selling/' component={() => <ProductPage\r\n                  addToCart={addToCart} changeDetailProduct={changeDetailProduct}\r\n                  setDetailProduct={setDetailProduct} addToFavorite={addToFavorite}\r\n                  removeFromFavorite={removeFromFavorite}\r\n                />} />\r\n                <Route path='/cart' component={() => <CartPage\r\n                  removeItem={removeItem} changeDetailProduct={changeDetailProduct}\r\n                  addQuantity={addQuantity} minusQuantity={minusQuantity} addToFavorite={addToFavorite} />} />\r\n                <Route path='/product' component={() => <DetailPage\r\n                  products={detailProduct} addToCart={addToCart}\r\n                  minusQuantity={minusQuantity} addToFavorite={addToFavorite}\r\n                  removeFromFavorite={removeFromFavorite} />} />\r\n                <Route path=\"/Favorite\" component={() => <Favorite\r\n                  setDetailProduct={setDetailProduct}\r\n                  removeFromFavorite={removeFromFavorite}\r\n                />} />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        )} />\r\n      </Router>\r\n\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\project\\shoes_selling\\src\\productList.js",["92"],"import React, { useState, useEffect } from 'react'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport { takeAllCheckBoxTrue } from './takeAllCheckBoxTrue'\r\nimport './productList.css'\r\nimport './DetailPage/detailPage.css'\r\nimport { db } from './firebase'\r\nimport FilterForm from './FilterForm'\r\nimport ProductItem from './ProductItem'\r\n\r\nimport product from './product'\r\nimport filter from './filter'\r\n\r\nfunction ProductList({ changeDetailProduct,\r\n    addToCart, addToFavorite, filterStyle,\r\n    closeFilter, removeFromFavorite\r\n}) {\r\n    // filter product by the filter form \r\n\r\n    // list of product after filter\r\n    const [products, setProducts] = useState([]);\r\n    const [animateProduct, setAnimateProduct] = useState(true)\r\n\r\n    let Product\r\n    //get product from firebase\r\n    const getProduct = () => {\r\n\r\n        db.collection('products').onSnapshot((snapshot) => {\r\n            let tempData = [];\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n\r\n            ));\r\n            setProducts(tempData)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getProduct();\r\n    }, [])\r\n    //handle the filter form\r\n    db.collection('products').onSnapshot((snapshot) => {\r\n        let tempData = [];\r\n        tempData = snapshot.docs.map((doc) => (\r\n            {\r\n                id: doc.id,\r\n                product: doc.data()\r\n            }\r\n\r\n        ));\r\n        Product = new product(tempData)\r\n    })\r\n\r\n    const filterHandler = (filterEvent) => {\r\n        let targetName = filterEvent.target.name;\r\n        let targetValue = filterEvent.target.value;\r\n        setAnimateProduct(false)\r\n        setTimeout(() => {\r\n            filter.handlerFilterFormChange(targetName, targetValue)\r\n            Product.filterProduct(filter.gender, filter.brand, filter.price, filter.category)\r\n            setProducts(Product._currentProduct)\r\n            setAnimateProduct(true)\r\n        }, 400)\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-list-component\">\r\n            <div className='product-list-container'>\r\n                <FilterForm\r\n                    filterHandle={filterHandler}\r\n                    filterStyle={filterStyle}\r\n                    closeFilter={closeFilter}\r\n                />\r\n\r\n                <Fade in={animateProduct} timeout={800}>\r\n                    <div className='product-list'>\r\n                        {products.map((product) => (\r\n                            <ProductItem\r\n                                product={product}\r\n                                changeDetailProduct={changeDetailProduct}\r\n                                addToCart={addToCart}\r\n                                key={product.id}\r\n                                addToFavorite={addToFavorite}\r\n                                removeFromFavorite={removeFromFavorite}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </Fade>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProductList","C:\\project\\shoes_selling\\src\\Summary.js",[],"C:\\project\\shoes_selling\\src\\productPage.js",[],"C:\\project\\shoes_selling\\src\\ProductHeader.js",["93","94"],"C:\\project\\shoes_selling\\src\\firebase.js",["95"],"import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = firebase.initializeApp({\r\n    apiKey: \"AIzaSyA4MU-cHjuwF-sDpwGOv9XT9Zy2yjHVfhU\",\r\n    authDomain: \"shoeselling-53681.firebaseapp.com\",\r\n    projectId: \"shoeselling-53681\",\r\n    storageBucket: \"shoeselling-53681.appspot.com\",\r\n    messagingSenderId: \"666035407657\",\r\n    appId: \"1:666035407657:web:7f8ded085ab433581b8538\",\r\n    measurementId: \"G-LJ1SQMP82C\"\r\n\r\n});\r\n\r\n\r\nconst db = firebase.firestore();\r\nexport { db };","C:\\project\\shoes_selling\\src\\TrendingProducts.js",["96","97","98"],"import React, { useState, useEffect } from 'react'\r\nimport \"./TrendingProducts.css\"\r\nimport { AiOutlineRight } from 'react-icons/ai'\r\nimport { AiOutlineLeft } from 'react-icons/ai'\r\nimport { db } from './firebase'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction TrendingProducts({ changeDetailProduct }) {\r\n    const [products, setProducts] = useState([]);\r\n    const getProduct = () => {\r\n\r\n        db.collection('products').onSnapshot((snapshot) => {\r\n            let tempData = [];\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n\r\n            ));\r\n            setProducts(tempData)\r\n\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getProduct();\r\n    }, [])\r\n\r\n    const [translateProgress, setTranslateProgress] = useState(0)\r\n    let styledTrending = {\r\n        transform: `translateX(${translateProgress}rem)`\r\n    }\r\n    const handleScrollTrending = (button) => {\r\n        if (button == \"next\") {\r\n            if (translateProgress > -109) {\r\n                setTranslateProgress((pre) => pre -= 15.7)\r\n            }\r\n        }\r\n        else {\r\n            if (translateProgress)\r\n                setTranslateProgress((pre) => pre += 15.7)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Trending_container\" id='trending'>\r\n            <h2 className=\"title\">Trending</h2>\r\n            <div\r\n                className=\"Trending_btn previousBtn_container\"\r\n                onClick={() => handleScrollTrending(\"previous\")}\r\n            ><AiOutlineLeft /></div>\r\n            <div\r\n                className=\"Trending_btn nextBtn_container\"\r\n\r\n                onClick={() => handleScrollTrending(\"next\")}>\r\n                <AiOutlineRight />\r\n            </div>\r\n            <div className='Trending_slide_container'>\r\n\r\n                <div className=\"Trending_slide\"\r\n                    style={styledTrending}>\r\n                    {\r\n                        products\r\n                            .filter(product => (product.product.trending == true))\r\n                            .map(product => (\r\n                                <NavLink to=\"/product\" key={product.id}>\r\n                                    <div className=\"Trending_slide_product\" onClick={() => changeDetailProduct(product)}>\r\n                                        <img src={product.product.img[0]} />\r\n                                        <p>{product.product.name}</p>\r\n                                        <p>$ {product.product.price}</p>\r\n                                    </div>\r\n                                </NavLink>\r\n                            ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendingProducts\r\n","C:\\project\\shoes_selling\\src\\FilterForm.js",["99"],"import React, { useState, useEffect } from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport \"./FilterForm.css\"\r\nfunction FilterForm(props) {\r\n    const [categories, setCategories] = useState({\r\n        Soccer: false,\r\n        Training: false,\r\n        Basketball: false,\r\n        Running: false,\r\n        Football: false\r\n    })\r\n    const [isPositionFixed, setIsPositionFixed] = useState(false)\r\n    const CategoryStyle = {\r\n        color: 'rgb(114, 114, 114)'\r\n    }\r\n    const handleCategories = (e) => {\r\n        let newCategories = { ...categories }\r\n        let passCategory = {\r\n            target: {\r\n                name: \"categories\",\r\n                value: \"\"\r\n            }\r\n        }\r\n        if (newCategories[e.target.className.split(\" \")[1]] == true) {\r\n            for (let i in newCategories) {\r\n                newCategories[i] = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            for (let i in newCategories) {\r\n                newCategories[i] = false\r\n            }\r\n            newCategories[e.target.className.split(\" \")[1]] = true;\r\n            passCategory.target.value = e.target.className.split(\" \")[1]\r\n        }\r\n        console.log(passCategory)\r\n        props.filterHandle(passCategory)\r\n        setCategories(newCategories)\r\n\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 1000) setIsPositionFixed(true)\r\n            else setIsPositionFixed(false)\r\n        });\r\n        //return () => window.removeEventListener(\"scroll\")\r\n    }, [])\r\n    return (\r\n        <div className={`filter ${isPositionFixed & window.screen.width > 790 ? 'filter_fixed' : ''}`}\r\n            style={window.screen.width < 1000 ? props.filterStyle : {}}\r\n        >\r\n            <AiOutlineClose className='close-btn' onClick={() => props.closeFilter()} />\r\n            <div className='filter__line first__filter__line'>\r\n                <p>Gender</p>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value='Men'\r\n                        name='gender' className=\"checkbox\"\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label>Men</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value='Women'\r\n                        name='gender' className=\"checkbox\"\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label>Women</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value='Unisex'\r\n                        name='gender'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label>Unisex</label>\r\n                </div>\r\n            </div>\r\n            <div className='filter__line'>\r\n                <p>Brand</p>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value='Nike'\r\n                        name='brand'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label>Nike</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value='Puma'\r\n                        name='brand'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label>Puma</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value='Adidas'\r\n                        name='brand'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label>Adidas</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value='Rebook'\r\n                        name='brand'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label>Rebook</label>\r\n                </div>\r\n            </div>\r\n            <div className='filter__line'>\r\n                <p>Shop by Price</p>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value={[0, 25]}\r\n                        name='price'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label for='0-25'>$0-$25</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value={[25, 50]}\r\n                        name='price'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label for='25-50'>$25-$50</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value={[50, 100]}\r\n                        name='price'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label for='50-100'>$50-$100</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox' value={[100, 150]}\r\n                        name='price'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label for='100-150'>$100-$150</label>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        size={window.screen.width > 1000 ? \"small\" : \"medium\"}\r\n                        type='checkbox'\r\n                        value={[150, 10000]}\r\n                        name='price'\r\n                        onChange={(e) => props.filterHandle(e)} />\r\n                    <label for='150-10000'>Over $150</label>\r\n                </div>\r\n            </div>\r\n            <div className='filter__line category'>\r\n                {Object.keys(categories).map((category) => (\r\n                    <div\r\n                        className={`categories ${category}`} key={category}\r\n                        type='radio' name='categories'\r\n                        onClick={(e) => handleCategories(e)}\r\n                        style={categories[category] ? CategoryStyle : {}}>\r\n                        {category}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterForm\r\n","C:\\project\\shoes_selling\\src\\takeAllCheckBoxTrue.js",[],"C:\\project\\shoes_selling\\src\\ProductItem.js",["100"],"import React, { useState, useEffect } from 'react'\r\nimport \"./ProductItem.css\"\r\nimport { NavLink } from 'react-router-dom'\r\nimport { db } from './firebase'\r\nfunction ProductItem({ product, changeDetailProduct, addToFavorite, removeFromFavorite }) {\r\n    const [imgOrder, setImgOrder] = useState(0)\r\n    const [FavoriteID, setFavoriteID] = useState([]);\r\n    const handleHover = (imgSrc) => {\r\n        setImgOrder(product.product.img.indexOf(imgSrc))\r\n    }\r\n\r\n    useEffect(() => {\r\n        db.collection('favorite').onSnapshot((snapshot) => {\r\n            let tempData = []\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n            ))\r\n            setFavoriteID(tempData.map(product => product.id));\r\n        })\r\n    }, [])\r\n\r\n    const checkFavoriteList = (product) => {\r\n        return FavoriteID.includes(product.id);\r\n    }\r\n    const favoriteCheckStyle = {\r\n        backgroundColor: \"#fff\",\r\n        color: \"#333\"\r\n    }\r\n    return (\r\n        <div className='ProductItem' >\r\n            <NavLink to=\"/product\">\r\n                <img src={product.product.img[imgOrder]} height='100%' width='100%' alt={product.name + ' shoes'} onClick={() => changeDetailProduct(product)} />\r\n            </NavLink>\r\n            <div className='ProductDetail'>\r\n                <NavLink to=\"/product\">\r\n                    <h3 onClick={() => changeDetailProduct(product)}>{product.product.name}</h3>\r\n                </NavLink>\r\n                <p className='brand'>{product.product.brand}</p>\r\n                <p>${product.product.price}</p>\r\n            </div>\r\n            <div className=\"ProductDetail_imgList\">\r\n                <div className='img-list'>\r\n                    {\r\n                        product.product.img.map(imgSrc => (\r\n                            <img src={imgSrc} key={imgSrc} onMouseEnter={() => handleHover(imgSrc)}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"ProductDetail_imgList_btn\">\r\n                    <button\r\n                        className=\"like\"\r\n                        onClick={(e) => checkFavoriteList(product) ?\r\n                            removeFromFavorite(product.id) : addToFavorite(e, product)\r\n                        }\r\n                        style={checkFavoriteList(product) ? favoriteCheckStyle : {}}\r\n                    >\r\n                        Like\r\n                    </button>\r\n                    <NavLink to=\"/product\">\r\n                        <button onClick={() => changeDetailProduct(product)}>\r\n                            Detail\r\n                        </button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductItem\r\n","C:\\project\\shoes_selling\\src\\Searching-Product\\SearchingProduct.js",["101","102"],"import React, { useState, useEffect } from 'react'\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport { db } from 'C:/project/shoes_selling/src/firebase'\r\nimport './SearchingProduct.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SearchingProduct({ changeDetailProduct }) {\r\n\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [searchList, setSearchList] = useState([]);\r\n\r\n    const handleSearch = (searchInput) => {\r\n        setSearchInput(searchInput);\r\n    }\r\n    //search product every time searchInput changes  \r\n    useEffect(() => {\r\n        if (searchInput != \"\") {\r\n            db.collection('products').onSnapshot((snapshot) => {\r\n                let tempData = []\r\n                tempData = snapshot.docs.map((doc) => (\r\n                    {\r\n                        id: doc.id,\r\n                        product: doc.data()\r\n                    }\r\n                )).filter(shoe => shoe.product.name.includes(searchInput))\r\n                setSearchList(tempData);\r\n            })\r\n        }\r\n        else setSearchList([]);\r\n    }, [searchInput])\r\n\r\n    const handleSearchClick = (product) => {\r\n        changeDetailProduct(product);\r\n        setSearchList([]);\r\n        setSearchInput(\"\");\r\n    }\r\n    return (\r\n        <div className='search-input'>\r\n            <BsSearch className='search-btn' />\r\n            <input type='text' placeholder='Search'\r\n                value={searchInput}\r\n                onChange={(searchInput) => handleSearch(searchInput.target.value)}\r\n            />\r\n            {searchList.length > 0 ? (\r\n                <div className='searchList_container'>\r\n                    <div className='searchList'>\r\n                        {searchList.map((product) => (\r\n                            <NavLink\r\n                                to=\"/product\"\r\n                                className='searchList-item'\r\n                                onClick={() => handleSearchClick(product)}\r\n                            >\r\n                                <img src={product.product.img[0]} height=\"100px\" width=\"80px\" />\r\n                                <p>{product.product.name}</p>\r\n                            </NavLink>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n                : <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchingProduct\r\n","C:\\project\\shoes_selling\\src\\FavoritePage\\Favorite.js",["103"],"import React, { useEffect, useState } from 'react'\r\nimport \"./Favorite.css\"\r\nimport Button from '@material-ui/core/Button'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport { db } from '../firebase';\r\n\r\nfunction Favorite({ setDetailProduct, removeFromFavorite }) {\r\n    const [favoriteList, setFavoriteList] = useState([]);\r\n    //get favorite list\r\n    useEffect(() => {\r\n        db.collection('favorite').onSnapshot((snapshot) => {\r\n            let tempData = []\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n            ))\r\n            setFavoriteList(tempData);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className='favorite_page'>\r\n            <div className=\"favorite_container\">\r\n                <h2>Your favorite list ({favoriteList.length})</h2>\r\n\r\n                <div className='favorite_list'>\r\n                    {favoriteList.map(item => (\r\n                        <Fade\r\n                            in={item.id}\r\n                            timeout={600}\r\n                        >\r\n                            <div className='favorite_item'>\r\n                                <div className=\"favorite_img_container\">\r\n                                    <NavLink to=\"./product\">\r\n                                        <img src={item.product.img[0]} height=\"100%\" width=\"100%\"\r\n                                            onClick={() => setDetailProduct(item)} />\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div className=\"favorite_item_content\">\r\n                                    <NavLink to=\"./product\">\r\n                                        <h2 onClick={() => setDetailProduct(item)}>{item.product.name}</h2>\r\n                                    </NavLink>\r\n                                    <Button\r\n                                        color=\"secondary\"\r\n                                        variant=\"outlined\"\r\n                                        size='small'\r\n                                        className='favoriteDelete'\r\n                                        onClick={() => removeFromFavorite(item.id)}>\r\n                                        Remove\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </Fade>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Favorite\r\n","C:\\project\\shoes_selling\\src\\DetailPage\\DetailPage.js",["104","105","106"],"import React, { useState, useEffect } from 'react'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport './detailPage.css'\r\nimport { db } from 'C:/project/shoes_selling/src/firebase'\r\n\r\nfunction DetailPage({ products, addToCart, addToFavorite, removeFromFavorite }) {\r\n    const [mainImg, setMainImg] = useState(0)\r\n    const [isSlide, setIsSlide] = useState(true)\r\n    const [FavoriteID, setFavoriteID] = useState([]);\r\n    const changeMainImg = (srcImg) => {\r\n        setIsSlide(false)\r\n        setMainImg(products.product.img.indexOf(srcImg))\r\n        setTimeout(() => setIsSlide(true), 200)\r\n    }\r\n    const styleImgList = {\r\n        border: '1px solid black'\r\n    }\r\n    //get Favorite list ID\r\n    useEffect(() => {\r\n        db.collection('favorite').onSnapshot((snapshot) => {\r\n            let tempData = []\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n            ))\r\n            setFavoriteID(tempData.map(product => product.id));\r\n        })\r\n    }, [])\r\n\r\n    const checkFavoriteList = (products) => {\r\n        return FavoriteID.includes(products?.id);\r\n    }\r\n    const favoriteCheckStyle = {\r\n        backgroundColor: \"#fff\",\r\n        color: \"#333\"\r\n    }\r\n    return (\r\n        <div className=\"detailPage\">\r\n            <div className=\"mainImg_container\">\r\n                <Slide in={isSlide} timeout={{ enter: 400, exit: 0 }} direction={'left'}>\r\n                    <img src={products?.product?.img[mainImg]} height=\"100%\" width=\"100%\" />\r\n                </Slide>\r\n            </div>\r\n\r\n            <div className='product_detail'>\r\n                <div className='imgList'>\r\n                    <h2>{products?.product?.name}</h2>\r\n                    <p>$ {products?.product?.price}</p>\r\n                    <div className='imgList_container'>\r\n                        {\r\n                            products?.product?.img.map(singleImg => (\r\n                                <img\r\n                                    key={products.product.img.indexOf(singleImg)}\r\n                                    src={singleImg} height=\"100%\" onClick={(e) => changeMainImg(singleImg)}\r\n                                    style={products?.product.img.indexOf(singleImg) == mainImg ? styleImgList : {}} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <p className='product_detail_description'>{products?.product?.description}</p>\r\n                    <button onClick={(e) => addToCart(products, mainImg, e)} className=\"AddToCart\">Add to cart</button>\r\n                    <button\r\n                        onClick={(e) => checkFavoriteList(products) ?\r\n                            removeFromFavorite(products.id) : addToFavorite(e, products)\r\n                        }\r\n                        style={checkFavoriteList(products) ? favoriteCheckStyle : {}}\r\n                        className=\"like\">\r\n                        Like\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailPage\r\n","C:\\project\\shoes_selling\\src\\Cart\\Cart.js",["107"],"import React, { useEffect, useState } from 'react'\r\nimport './Cart.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Summary from '../Summary'\r\nimport { db } from 'C:/project/shoes_selling/src/firebase'\r\nfunction Cart(props) {\r\n    const [cartList, setCartList] = useState([])\r\n    useEffect(() => {\r\n        db.collection('cart').onSnapshot((snapshot) => {\r\n            let tempData = []\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n            ))\r\n            setCartList(tempData);\r\n        })\r\n    }, [])\r\n    let subtotal = cartList.reduce((sum, item) => sum + item.product.price * item.product.quantity, 0);\r\n    const handleProductCallBack = (item) => {\r\n        let updateItem = { ...item }\r\n        updateItem.id = updateItem.id.split(\"_\")[0]\r\n        props.changeDetailProduct(updateItem)\r\n    }\r\n    return (\r\n        <div className='cart-page'>\r\n\r\n            <div className='cart'>\r\n                {cartList.map((item) => (\r\n                    <Fade\r\n                        in={item.id}\r\n                        timeout={500}\r\n                    >\r\n                        <div className='cart-item'>\r\n                            <img src={item?.product?.img[item.id.split(\"_\")[1]]} />\r\n                            <div className='cart-item-detail-container'>\r\n                                <div className='cart-item-detail'>\r\n                                    <NavLink to=\"/product\">\r\n                                        <h4\r\n                                            onClick={() => handleProductCallBack(item)}\r\n                                        >\r\n                                            {item.product.name}\r\n                                        </h4>\r\n                                    </NavLink>\r\n                                    <label for='size'>Size</label>\r\n                                    <select name='size'>\r\n                                        <option value='11'>8</option>\r\n                                        <option value='11'>9</option>\r\n                                        <option value='11'>10</option>\r\n                                        <option value='11'>11</option>\r\n                                    </select>\r\n                                    <div className=\"quantity-container\">\r\n                                        <p>quantity</p>\r\n                                        <button className=\"reduce-quantity\" onClick={() => props.minusQuantity(item)}>-</button>\r\n                                        <input\r\n                                            type=\"text\" for=\"quantity\" value={item.product.quantity}\r\n                                            onChange={(input) => props.handleQuantity(input)} />\r\n                                        <button onClick={(e) => props.addQuantity(item, e)}>+</button>\r\n                                    </div>\r\n                                    <p className='price'>${item.product.price}</p>\r\n                                </div>\r\n                                <button onClick={(e) => props.addToFavorite(e, item)}>Move to Favorite</button>\r\n                                <button onClick={() => props.removeItem(item.id, item)}>Remove</button>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n                ))}\r\n            </div>\r\n            <div className='summary-cart'>\r\n                <Summary subtotal={subtotal} />\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default Cart","C:\\project\\shoes_selling\\src\\product.js",["108","109","110","111","112"],"class product {\r\n\r\n    constructor(product) {\r\n        this._product = product\r\n        this._currentProduct = product\r\n    }\r\n    _filterByGender(genderList) {\r\n        if (genderList.length == 0) return;\r\n        this._currentProduct = this._currentProduct.filter(item => genderList.indexOf(item.product.gender) > -1)\r\n    }\r\n    _filterByBrand(brandList) {\r\n        if (brandList.length == 0) return;\r\n        this._currentProduct = this._currentProduct.filter(item => brandList.indexOf(item.product.brand) > -1)\r\n    }\r\n    _filterByPrice(priceList) {\r\n        if (priceList.length == 0) return;\r\n        this._currentProduct = this._currentProduct.filter(item => {\r\n            return priceList.some(([minPrice, maxPrice]) => minPrice <= item.product.price && maxPrice >= item.product.price)\r\n        })\r\n    }\r\n    _filterByCategories(category) {\r\n        if (category === '') return;\r\n        this._currentProduct = this._currentProduct.filter(item => item.product.category === category)\r\n    }\r\n    filterProduct(genderList, brandList, priceList, category) {\r\n        this._currentProduct = this._product\r\n        this._filterByGender(genderList)\r\n        this._filterByBrand(brandList)\r\n        this._filterByPrice(priceList)\r\n        this._filterByCategories(category)\r\n    }\r\n\r\n    removeProduct(productID) {\r\n        this._currentProduct = this._currentProduct.filter(item => item.id != productID)\r\n    }\r\n    changeQuantity(productID) {\r\n        let product = this._currentProduct.find(item => item.id == productID)\r\n        if (!product.quantity) product.quantity = 1;\r\n        product.quantity++;\r\n    }\r\n}\r\n\r\nexport default product","C:\\project\\shoes_selling\\src\\filter.js",["113"],"class filter {\r\n    gender = []\r\n    brand = []\r\n    price = []\r\n    category = ''\r\n    handlerFilterFormChange(filterName, filterValue) {\r\n        switch (filterName) {\r\n            case 'gender':\r\n                this.gender.indexOf(filterValue) < 0 ?\r\n                    this.gender.push(filterValue) :\r\n                    this.gender.splice(this.gender.indexOf(filterValue), 1)\r\n                break;\r\n            case 'brand':\r\n                this.brand.indexOf(filterValue) < 0 ?\r\n                    this.brand.push(filterValue) :\r\n                    this.brand.splice(this.brand.indexOf(filterValue), 1)\r\n                break;\r\n            case 'price':\r\n                this.price.indexOf(filterValue) < 0 ?\r\n                    this.price.push(filterValue) :\r\n                    this.price.splice(this.price.indexOf(filterValue), 1)\r\n                break;\r\n            case 'categories':\r\n                this.category === filterValue ?\r\n                    this.category = '' :\r\n                    this.category = filterValue\r\n        }\r\n    }\r\n}\r\n\r\nexport default new filter()",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":14,"column":9,"nodeType":"120","messageId":"121","endLine":14,"endColumn":10},{"ruleId":"122","severity":1,"message":"123","line":76,"column":33,"nodeType":"124","messageId":"125","endLine":76,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":122,"column":13,"nodeType":"128","endLine":122,"endColumn":125},{"ruleId":"118","severity":1,"message":"129","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":29},{"ruleId":"118","severity":1,"message":"130","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":74,"column":49,"nodeType":"124","messageId":"125","endLine":74,"endColumn":51},{"ruleId":"118","severity":1,"message":"131","line":4,"column":7,"nodeType":"120","messageId":"121","endLine":4,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":34,"column":20,"nodeType":"124","messageId":"125","endLine":34,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":63,"column":74,"nodeType":"124","messageId":"125","endLine":63,"endColumn":76},{"ruleId":"126","severity":1,"message":"127","line":67,"column":41,"nodeType":"128","endLine":67,"endColumn":77},{"ruleId":"122","severity":1,"message":"123","line":25,"column":61,"nodeType":"124","messageId":"125","endLine":25,"endColumn":63},{"ruleId":"126","severity":1,"message":"127","line":48,"column":29,"nodeType":"128","endLine":49,"endColumn":31},{"ruleId":"122","severity":1,"message":"132","line":17,"column":25,"nodeType":"124","messageId":"125","endLine":17,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":53,"column":33,"nodeType":"128","endLine":53,"endColumn":97},{"ruleId":"126","severity":1,"message":"127","line":38,"column":41,"nodeType":"128","endLine":39,"endColumn":86},{"ruleId":"126","severity":1,"message":"127","line":43,"column":21,"nodeType":"128","endLine":43,"endColumn":93},{"ruleId":"126","severity":1,"message":"127","line":54,"column":33,"nodeType":"128","endLine":57,"endColumn":119},{"ruleId":"122","severity":1,"message":"123","line":57,"column":85,"nodeType":"124","messageId":"125","endLine":57,"endColumn":87},{"ruleId":"126","severity":1,"message":"127","line":37,"column":29,"nodeType":"128","endLine":37,"endColumn":84},{"ruleId":"122","severity":1,"message":"123","line":8,"column":31,"nodeType":"124","messageId":"125","endLine":8,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":12,"column":30,"nodeType":"124","messageId":"125","endLine":12,"endColumn":32},{"ruleId":"122","severity":1,"message":"123","line":16,"column":30,"nodeType":"124","messageId":"125","endLine":16,"endColumn":32},{"ruleId":"122","severity":1,"message":"132","line":34,"column":76,"nodeType":"124","messageId":"125","endLine":34,"endColumn":78},{"ruleId":"122","severity":1,"message":"123","line":37,"column":65,"nodeType":"124","messageId":"125","endLine":37,"endColumn":67},{"ruleId":"133","severity":1,"message":"134","line":7,"column":9,"nodeType":"135","messageId":"136","endLine":27,"endColumn":10},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'takeAllCheckBoxTrue' is defined but never used.","'useEffect' is defined but never used.","'firebaseConfig' is assigned a value but never used.","Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]