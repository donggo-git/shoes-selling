[{"C:\\project\\shoes_selling\\src\\index.js":"1","C:\\project\\shoes_selling\\src\\reportWebVitals.js":"2","C:\\project\\shoes_selling\\src\\App.js":"3","C:\\project\\shoes_selling\\src\\Summary.js":"4","C:\\project\\shoes_selling\\src\\firebase.js":"5","C:\\project\\shoes_selling\\src\\takeAllCheckBoxTrue.js":"6","C:\\project\\shoes_selling\\src\\Searching-Product\\SearchingProduct.js":"7","C:\\project\\shoes_selling\\src\\FavoritePage\\Favorite.js":"8","C:\\project\\shoes_selling\\src\\DetailPage\\DetailPage.js":"9","C:\\project\\shoes_selling\\src\\Cart\\Cart.js":"10","C:\\project\\shoes_selling\\src\\HomePage\\productPage.js":"11","C:\\project\\shoes_selling\\src\\HomePage\\productList.js":"12","C:\\project\\shoes_selling\\src\\HomePage\\TrendingProducts.js":"13","C:\\project\\shoes_selling\\src\\HomePage\\ProductHeader.js":"14","C:\\project\\shoes_selling\\src\\HomePage\\ProductItem.js":"15","C:\\project\\shoes_selling\\src\\HomePage\\FilterForm.js":"16","C:\\project\\shoes_selling\\src\\helper\\filter.js":"17","C:\\project\\shoes_selling\\src\\UI\\Button.js":"18","C:\\project\\shoes_selling\\src\\helper\\cart.js":"19","C:\\project\\shoes_selling\\src\\helper\\list.js":"20","C:\\project\\shoes_selling\\src\\helper\\controller.js":"21","C:\\project\\shoes_selling\\src\\helper\\favorite.js":"22"},{"size":449,"mtime":1612158955455,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":6462,"mtime":1662943473819,"results":"26","hashOfConfig":"24"},{"size":3070,"mtime":1661994025249,"results":"27","hashOfConfig":"24"},{"size":545,"mtime":1623133984778,"results":"28","hashOfConfig":"24"},{"size":281,"mtime":1624140652349,"results":"29","hashOfConfig":"24"},{"size":2423,"mtime":1640635831164,"results":"30","hashOfConfig":"24"},{"size":2601,"mtime":1663120053394,"results":"31","hashOfConfig":"24"},{"size":3069,"mtime":1663120921409,"results":"32","hashOfConfig":"24"},{"size":3659,"mtime":1662581707066,"results":"33","hashOfConfig":"24"},{"size":2568,"mtime":1662690056753,"results":"34","hashOfConfig":"24"},{"size":3278,"mtime":1662946640497,"results":"35","hashOfConfig":"24"},{"size":3566,"mtime":1662942434416,"results":"36","hashOfConfig":"24"},{"size":4475,"mtime":1661904767427,"results":"37","hashOfConfig":"24"},{"size":2872,"mtime":1662948040742,"results":"38","hashOfConfig":"24"},{"size":5036,"mtime":1662942607210,"results":"39","hashOfConfig":"24"},{"size":1453,"mtime":1662164623885,"results":"40","hashOfConfig":"24"},{"size":477,"mtime":1662942213964,"results":"41","hashOfConfig":"24"},{"size":461,"mtime":1662947502914,"results":"42","hashOfConfig":"24"},{"size":1691,"mtime":1662955315729,"results":"43","hashOfConfig":"24"},{"size":2218,"mtime":1662955504151,"results":"44","hashOfConfig":"24"},{"size":349,"mtime":1662947463407,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"14h9trl",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"48"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"48"},"C:\\project\\shoes_selling\\src\\index.js",[],["104","105"],"C:\\project\\shoes_selling\\src\\reportWebVitals.js",[],"C:\\project\\shoes_selling\\src\\App.js",["106","107","108","109","110","111","112","113","114"],"import './App.css';\r\nimport React, { useState, useEffect } from 'react'\r\nimport ProductPage from './HomePage/productPage'\r\nimport CartPage from './Cart/Cart'\r\nimport Favorite from './FavoritePage/Favorite';\r\nimport DetailPage from './DetailPage/DetailPage';\r\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\r\nimport { IoCartOutline } from 'react-icons/io5'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport SearchingProduct from './Searching-Product/SearchingProduct';\r\nimport { db } from './firebase'\r\n\r\nfunction App() {\r\n  const _ = require('lodash');\r\n  const [detailProduct, setDetailProduct] = useState()\r\n  const [cartLength, setCartLength] = useState(0);\r\n  const [favoriteLength, setFavoriteLength] = useState(0)\r\n  const [cart, setCart] = useState([])\r\n  const [products, setProducts] = useState([])\r\n  const [favorite, setFavorite] = useState([])\r\n\r\n  // functionality for cart\r\n  //get cart length\r\n  useEffect(() => {\r\n    //get all of products\r\n    /*\r\n    getProduct('products')\r\n    //get all products in cart\r\n    getProduct('cart')\r\n    //get all products in favorite\r\n    getProduct('favorite')\r\n    //get total quantity of all items in cart\r\n    setCartLength(getTotalProductsQuantity(cart))\r\n    //get total quantity of all items in favorite\r\n    setFavoriteLength(getTotalProductsQuantity(favorite))*/\r\n  }, [])\r\n\r\n  const removeItem = (productID) => {\r\n    db.collection(\"cart\").doc(productID).delete();\r\n  }\r\n  const addQuantity = (product, e) => {\r\n    e.preventDefault();\r\n    const updateProduct = db.collection(\"cart\").doc(product.id)\r\n    updateProduct.get()\r\n      .then((doc) => {\r\n        updateProduct.update({\r\n          quantity: doc.data().quantity + 1\r\n        })\r\n      })\r\n  }\r\n  const minusQuantity = (product) => {\r\n    const updateProduct = db.collection(\"cart\").doc(product.id)\r\n    updateProduct.get()\r\n      .then(doc => {\r\n        if (doc.data().quantity == 1) {\r\n          updateProduct.delete()\r\n        }\r\n        else {\r\n          updateProduct.update({\r\n            quantity: doc.data().quantity - 1\r\n          })\r\n        }\r\n      })\r\n\r\n    //old way\r\n  }\r\n  const changeDetailProduct = (detailProduct) => {\r\n    setDetailProduct(detailProduct)\r\n  }\r\n  const removeFromFavorite = (id) => {\r\n    db.collection(\"favorite\").doc(id).delete();\r\n\r\n  }\r\n\r\n  ///////\r\n  const addProduct = function (product, img = '', collection) {\r\n    //if collection is cart this method will add product to cart\r\n    //if collection is favorite this method will add product to favorite\r\n    const productList = db.collection(`${collection}`).doc(`${img != '' ? product.id + \"_\" + img : product.id}`)\r\n    productList.get()\r\n      .then(doc => {\r\n        if (!doc.exists) {\r\n          productList.set({\r\n            name: product.product.name,\r\n            description: product.product.description,\r\n            gender: product.product.gender,\r\n            category: product.product.category,\r\n            //for cart there only one img per product\r\n            //for favorite there are multiple img per product\r\n            img: img !== '' ? product.product.img[img] : product.product.img,\r\n            price: product.product.price,\r\n            quantity: 1\r\n          })\r\n        }\r\n        else {\r\n          productList.update({\r\n            quantity: doc.data().quantity + 1\r\n          })\r\n        }\r\n      })\r\n    if (collection == 'cart') {\r\n      setCartLength(getTotalProductsQuantity(cart))\r\n    }\r\n    if (collection == 'favorite') {\r\n      setFavoriteLength(getTotalProductsQuantity(favorite))\r\n    }\r\n  }\r\n  ///\r\n  const getProduct = (collection) => {\r\n    db.collection(collection).onSnapshot((snapshot) => {\r\n      let tempData = []\r\n      tempData = snapshot.docs.map((doc) => (\r\n        {\r\n          id: doc.id,\r\n          product: doc.data()\r\n        }\r\n      ))\r\n      switch (collection) {\r\n        case \"products\":\r\n          setProducts(tempData);\r\n          break;\r\n        case \"cart\":\r\n          setCart(tempData);\r\n        case \"favorite\":\r\n          setFavorite(tempData)\r\n      }\r\n    })\r\n  }\r\n  const getTotalProductsQuantity = (collectionName) => {\r\n    return collectionName.reduce((acc, product) => acc += product.product.quantity, 0)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <nav>\r\n          <ul>\r\n            <img src=\"https://images.template.net/wp-content/uploads/2016/08/08090604/Soccer-Shoe-Logo.jpg\" height=\"50px\" />\r\n            <NavLink to='/shoes-selling/' className='nav__homePage'>Home</NavLink>\r\n            <NavLink to=\"/Favorite\"><li>Favorite ({favoriteLength})</li></NavLink>\r\n\r\n          </ul>\r\n\r\n          <SearchingProduct changeDetailProduct={changeDetailProduct} />\r\n\r\n          <NavLink to='/cart'>\r\n            <div className='nav__cart '>\r\n              <IoCartOutline className='cart_icon' />\r\n              <div className='nav__cart__amount'>{cartLength}</div>\r\n            </div>\r\n          </NavLink>\r\n        </nav>\r\n\r\n\r\n\r\n        <Route render={({ location }) => (\r\n          <TransitionGroup>\r\n            <CSSTransition timeout={150} classNames='fade' key={location.key}>\r\n              <Switch >\r\n                <Route path='/shoes-selling/' component={() => <ProductPage\r\n                  changeDetailProduct={changeDetailProduct}\r\n                  setDetailProduct={setDetailProduct}\r\n                  removeFromFavorite={removeFromFavorite}\r\n                  addProduct={addProduct}\r\n                  products={products}\r\n                />} />\r\n                <Route path='/cart' component={() => <CartPage\r\n                  removeItem={removeItem} changeDetailProduct={changeDetailProduct}\r\n                  addQuantity={addQuantity} minusQuantity={minusQuantity}\r\n                  addProduct={addProduct} />} />\r\n                <Route path='/product' component={() => <DetailPage\r\n                  products={detailProduct}\r\n                  minusQuantity={minusQuantity}\r\n                  removeFromFavorite={removeFromFavorite}\r\n                  addProduct={addProduct}\r\n                />} />\r\n                <Route path=\"/Favorite\" component={() => <Favorite\r\n                  setDetailProduct={setDetailProduct}\r\n                  removeFromFavorite={removeFromFavorite}\r\n                />} />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        )} />\r\n      </Router>\r\n\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\project\\shoes_selling\\src\\Summary.js",[],"C:\\project\\shoes_selling\\src\\firebase.js",["115"],"import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = firebase.initializeApp({\r\n    apiKey: \"AIzaSyA4MU-cHjuwF-sDpwGOv9XT9Zy2yjHVfhU\",\r\n    authDomain: \"shoeselling-53681.firebaseapp.com\",\r\n    projectId: \"shoeselling-53681\",\r\n    storageBucket: \"shoeselling-53681.appspot.com\",\r\n    messagingSenderId: \"666035407657\",\r\n    appId: \"1:666035407657:web:7f8ded085ab433581b8538\",\r\n    measurementId: \"G-LJ1SQMP82C\"\r\n\r\n});\r\n\r\n\r\nconst db = firebase.firestore();\r\nexport { db };","C:\\project\\shoes_selling\\src\\takeAllCheckBoxTrue.js",[],["116","117"],"C:\\project\\shoes_selling\\src\\Searching-Product\\SearchingProduct.js",["118","119"],"import React, { useState, useEffect } from 'react'\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport { db } from 'C:/project/shoes_selling/src/firebase'\r\nimport './SearchingProduct.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SearchingProduct({ changeDetailProduct }) {\r\n\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [searchList, setSearchList] = useState([]);\r\n\r\n    const handleSearch = (searchInput) => {\r\n        setSearchInput(searchInput);\r\n    }\r\n    //search product every time searchInput changes  \r\n    useEffect(() => {\r\n        if (searchInput != \"\") {\r\n            db.collection('products').onSnapshot((snapshot) => {\r\n                let tempData = []\r\n                tempData = snapshot.docs.map((doc) => (\r\n                    {\r\n                        id: doc.id,\r\n                        product: doc.data()\r\n                    }\r\n                )).filter(shoe => shoe.product.name.includes(searchInput))\r\n                setSearchList(tempData);\r\n            })\r\n        }\r\n        else setSearchList([]);\r\n    }, [searchInput])\r\n\r\n    const handleSearchClick = (product) => {\r\n        changeDetailProduct(product);\r\n        setSearchList([]);\r\n        setSearchInput(\"\");\r\n    }\r\n    return (\r\n        <div className='search-input'>\r\n            <BsSearch className='search-btn' />\r\n            <input type='text' placeholder='Search'\r\n                value={searchInput}\r\n                onChange={(searchInput) => handleSearch(searchInput.target.value)}\r\n            />\r\n            {searchList.length > 0 ? (\r\n                <div className='searchList_container'>\r\n                    <div className='searchList'>\r\n                        {searchList.map((product) => (\r\n                            <NavLink\r\n                                to=\"/product\"\r\n                                className='searchList-item'\r\n                                onClick={() => handleSearchClick(product)}\r\n                            >\r\n                                <img src={product.product.img[0]} height=\"100px\" width=\"80px\" />\r\n                                <p>{product.product.name}</p>\r\n                            </NavLink>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n                : <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchingProduct\r\n","C:\\project\\shoes_selling\\src\\FavoritePage\\Favorite.js",["120"],"C:\\project\\shoes_selling\\src\\DetailPage\\DetailPage.js",["121","122","123"],"C:\\project\\shoes_selling\\src\\Cart\\Cart.js",["124"],"import React, { useEffect, useState } from 'react'\r\nimport './Cart.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Summary from '../Summary'\r\nimport { db } from 'C:/project/shoes_selling/src/firebase'\r\nfunction Cart(props) {\r\n    const [cartList, setCartList] = useState([])\r\n    useEffect(() => {\r\n        db.collection('cart').onSnapshot((snapshot) => {\r\n            let tempData = []\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n            ))\r\n            setCartList(tempData);\r\n        })\r\n    }, [])\r\n    let subtotal = cartList.reduce((sum, item) => sum + item.product.price * item.product.quantity, 0);\r\n    const handleProductCallBack = (item) => {\r\n        let updateItem = { ...item }\r\n        updateItem.id = updateItem.id.split(\"_\")[0]\r\n        props.changeDetailProduct(updateItem)\r\n    }\r\n    return (\r\n        <div className='cart-page'>\r\n\r\n            <div className='cart'>\r\n                {cartList.map((item) => (\r\n                    <Fade\r\n                        in={item.id}\r\n                        timeout={500}\r\n                    >\r\n                        <div className='cart-item'>\r\n                            <img src={item?.product?.img} />\r\n                            <div className='cart-item-detail-container'>\r\n                                <div className='cart-item-detail'>\r\n                                    <NavLink to=\"/product\">\r\n                                        <h4\r\n                                            onClick={() => handleProductCallBack(item)}\r\n                                        >\r\n                                            {item.product.name}\r\n                                        </h4>\r\n                                    </NavLink>\r\n                                    <label for='size'>Size</label>\r\n                                    <select name='size'>\r\n                                        <option value='11'>8</option>\r\n                                        <option value='11'>9</option>\r\n                                        <option value='11'>10</option>\r\n                                        <option value='11'>11</option>\r\n                                    </select>\r\n                                    <div className=\"quantity-container\">\r\n                                        <p>quantity</p>\r\n                                        <button className=\"reduce-quantity\" onClick={() => props.minusQuantity(item)}>-</button>\r\n                                        <input\r\n                                            type=\"text\" for=\"quantity\" value={item.product.quantity}\r\n                                            onChange={(input) => props.handleQuantity(input)} />\r\n                                        <button onClick={(e) => props.addQuantity(item, e)}>+</button>\r\n                                    </div>\r\n                                    <p className='price'>${item.product.price}</p>\r\n                                </div>\r\n                                <button onClick={(e) => props.addProduct(item, '', 'favorite')}>Move to Favorite</button>\r\n                                <button onClick={() => props.removeItem(item.id, item)}>Remove</button>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n                ))}\r\n            </div>\r\n            <div className='summary-cart'>\r\n                <Summary subtotal={subtotal} />\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default Cart","C:\\project\\shoes_selling\\src\\HomePage\\productPage.js",[],"C:\\project\\shoes_selling\\src\\HomePage\\productList.js",[],"C:\\project\\shoes_selling\\src\\HomePage\\TrendingProducts.js",["125","126","127","128"],"import React, { useState, useEffect } from 'react'\r\nimport \"./TrendingProducts.css\"\r\nimport { AiOutlineRight } from 'react-icons/ai'\r\nimport { AiOutlineLeft } from 'react-icons/ai'\r\nimport { db } from '../firebase'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction TrendingProducts({ changeDetailProduct }) {\r\n    const [TrendingProduct, setTrendingProduct] = useState([]);\r\n    const getProduct = () => {\r\n\r\n        db.collection('products').onSnapshot((snapshot) => {\r\n            let tempData = [];\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n\r\n            ));\r\n            trendingProductModify(tempData.filter(product => (product.product.trending == true)))\r\n\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getProduct();\r\n    }, [])\r\n\r\n    const trendingProductModify = (tempData) => {\r\n        let newTrendingProduct = []\r\n\r\n        for (let i = 2; i < tempData.length; i += 3) {\r\n            const TrendingPack = [tempData[i - 2], tempData[i - 1], tempData[i]]\r\n            newTrendingProduct.push(TrendingPack)\r\n        }\r\n        setTrendingProduct(newTrendingProduct);\r\n    }\r\n\r\n    const [translateProgress, setTranslateProgress] = useState(0)\r\n    let styledTrending = {\r\n        transform: `translateX(${translateProgress}%)`\r\n    }\r\n    const handleScrollTrending = (button) => {\r\n        if (button == \"next\") {\r\n            if (translateProgress > -75) {\r\n                setTranslateProgress((pre) => pre -= 25)\r\n            }\r\n            return\r\n        }\r\n        else {\r\n            if (translateProgress)\r\n                setTranslateProgress((pre) => pre += 25)\r\n            return;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Trending_container\" id='trending'>\r\n            <h2 className=\"title\">Trending</h2>\r\n            <div\r\n                className=\"Trending_btn previousBtn_container\"\r\n                onClick={() => handleScrollTrending(\"previous\")}\r\n            ><AiOutlineLeft /></div>\r\n            <div\r\n                className=\"Trending_btn nextBtn_container\"\r\n\r\n                onClick={() => handleScrollTrending(\"next\")}>\r\n                <AiOutlineRight />\r\n            </div>\r\n            <div className='Trending_slide_container'>\r\n\r\n                <div className=\"Trending_slides\"\r\n                    style={styledTrending}>\r\n                    {\r\n                        TrendingProduct.map((slicePack, slideIndex) => (\r\n                            <div className='Trending_slide' key={slideIndex}>\r\n                                {\r\n                                    slicePack.map(product => (\r\n                                        <NavLink to=\"/product\" key={product.id}>\r\n                                            <div className=\"Trending_slide_product\" onClick={() => changeDetailProduct(product)}>\r\n                                                <img src={product.product.img[0]} />\r\n                                                <p className='Trending_slide_product--title'>{product.product.name}</p>\r\n                                                <p>$ {product.product.price}</p>\r\n                                            </div>\r\n                                        </NavLink>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendingProducts\r\n","C:\\project\\shoes_selling\\src\\HomePage\\ProductHeader.js",["129","130"],"import React, { useState, useEffect } from 'react'\r\nimport './ProductHeader.css'\r\n\r\n\r\nfunction ProductSlide() {\r\n    const [activeSlide, setActiveSlide] = useState(0)\r\n    let headerContents = [\r\n        {\r\n            title: \"New style from Puma\",\r\n            quote: \"New style,new energy\",\r\n            imgURL: 'https://images.puma.com/image/upload/q_auto,f_auto,w_1440/regional/%7Eregional%7EPNA%7Eothers%7EKOP%7EHome%7ESS21%7ERS+Curve+%7E21_SS_RS+CURVE+ADDITIONAL+IMAGES_SITE_1440x500_0000_1.jpg/fmt/jpg/fmt/png'\r\n        },\r\n        {\r\n            title: 'TREAT YOUR TRAINING',\r\n            quote: 'Feel comfortable with this style for your training',\r\n            imgURL: 'https://images.puma.com/image/upload/q_auto,f_auto,w_1440/regional/%7Eregional%7EPNA%7Eothers%7EKOP%7EHome%7ESS21%7EPeanuts%7E21SS_ECOM_MF_SP_SELECT_Peanuts_HotSpotHero_Desktop_1440x500_1.jpg/fmt/jpg/fmt/png'\r\n        },\r\n        {\r\n            title: 'Nike Basket 4',\r\n            quote: 'Coming soon',\r\n            imgURL: 'https://th.bing.com/th/id/OIP.ZBN-HKochUAO-NCiYHM1YAHaEo?w=290&h=181&c=7&o=5&dpr=1.5&pid=1.7'\r\n        }\r\n    ]\r\n\r\n\r\n    const changeSlideHandler = (e) => {\r\n        setActiveSlide(e.target.id)\r\n    }\r\n    return (\r\n        <div className='header'>\r\n\r\n            <header>\r\n                {/*slide container*/}\r\n                <div className='header__slideContainer'>\r\n                    {/*slides */}\r\n                    <div\r\n                        className='header__slider'\r\n                        style={{\r\n                            transform: `translateX(-${activeSlide / 3 * 100}%)`\r\n                        }}\r\n                    >\r\n                        {headerContents.map((slide, slideIndex) => (\r\n                            <div\r\n                                key={slide.title}\r\n                                className='header__slide'\r\n                                style={{\r\n                                    backgroundImage: `url(${slide.imgURL})`,\r\n                                    backgroundSize: 'cover'\r\n                                }}\r\n                            >\r\n                                <div className={`header__slide${slideIndex + 1}__content`}>\r\n                                    <div className={`header__slide${slideIndex + 1}__title`}>\r\n                                        <h2>{slide.title}</h2>\r\n                                    </div>\r\n                                    <div className={`header__slide${slideIndex + 1}__title`}>\r\n                                        <p>{slide.quote}</p>\r\n                                    </div>\r\n                                    <button>Check out</button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                </div>\r\n                {/*slideDots */}\r\n                <div className='header__slideDots'>\r\n                    {/*slideDot */}\r\n                    {\r\n                        headerContents.map((slideDot, slideIndex) => (\r\n                            <div\r\n                                key={slideDot.title}\r\n                                className='header__slideDot'\r\n                                style={\r\n                                    activeSlide == slideIndex ?\r\n                                        { 'background-color': '#027DEF' } :\r\n                                        {}\r\n                                }\r\n                                id={slideIndex}\r\n                                onClick={changeSlideHandler}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                {/****************************************************** */}\r\n                {/*\r\n                <div style={headerBackground} className={`slide-item item-slide${3}`}>\r\n                    <div className={`item-slide${random + 1}-content`}>\r\n                        <div className={`line${random + 1}`}>\r\n                            <h2>{headerContent[random].title}</h2>\r\n                        </div>\r\n                        <div className={`line${random + 1}`}>\r\n                            <p>{headerContent[random].quote}</p>\r\n                        </div>\r\n                        <button>Check out</button>\r\n                    </div>\r\n                </div>\r\n                */}\r\n            </header>\r\n        </div >\r\n    )\r\n}\r\nexport default ProductSlide","C:\\project\\shoes_selling\\src\\HomePage\\ProductItem.js",["131","132"],"import React, { useState, useEffect } from 'react'\r\nimport UIButton from '../UI/Button'\r\nimport \"./ProductItem.css\"\r\nimport { NavLink } from 'react-router-dom'\r\nimport { db } from '../firebase'\r\nimport { addProduct } from '../helper/controller'\r\n\r\nfunction ProductItem({ product, changeDetailProduct, removeFromFavorite }) {\r\n    const [imgOrder, setImgOrder] = useState(0)\r\n    const [FavoriteID, setFavoriteID] = useState([]);\r\n    const handleHover = (imgSrc) => {\r\n        setImgOrder(product.product.img.indexOf(imgSrc))\r\n    }\r\n    //////\r\n    /////////\r\n\r\n    useEffect(() => {\r\n        db.collection('favorite').onSnapshot((snapshot) => {\r\n            let tempData = []\r\n            tempData = snapshot.docs.map((doc) => (\r\n                {\r\n                    id: doc.id,\r\n                    product: doc.data()\r\n                }\r\n            ))\r\n            setFavoriteID(tempData.map(product => product.id));\r\n        })\r\n    }, [])\r\n\r\n    const checkFavoriteList = (product) => {\r\n        return FavoriteID.includes(product.id);\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        addProduct(product, '', 'favorite')\r\n    }\r\n\r\n    return (\r\n        <div className='ProductItem' >\r\n            <NavLink to=\"/product\">\r\n                <img src={product.product.img[imgOrder]} height='100%' width='100%' alt={product.name + ' shoes'} onClick={() => changeDetailProduct(product)} />\r\n            </NavLink>\r\n            <div className='ProductDetail'>\r\n                <NavLink to=\"/product\">\r\n                    <h3 onClick={() => changeDetailProduct(product)}>{product.product.name}</h3>\r\n                </NavLink>\r\n                <p className='brand'>{product.product.brand}</p>\r\n                <p>${product.product.price}</p>\r\n            </div>\r\n            <div className=\"ProductDetail_imgList\">\r\n                <div className='img-list'>\r\n                    {\r\n                        product.product.img.map(imgSrc => (\r\n                            <img src={imgSrc} key={imgSrc} onMouseEnter={() => handleHover(imgSrc)}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <React.Fragment>\r\n                    <UIButton\r\n                        className=\"like-btn\"\r\n                        onClickHandler={onClickHandler}\r\n\r\n                    >\r\n                        Like\r\n                    </UIButton>\r\n                    <NavLink to=\"/product\">\r\n                        <UIButton\r\n                            className='detail-btn'\r\n                            onClickHandler={() => changeDetailProduct(product)}\r\n                        >\r\n                            Detail\r\n                        </UIButton>\r\n                    </NavLink>\r\n                </React.Fragment>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductItem\r\n","C:\\project\\shoes_selling\\src\\HomePage\\FilterForm.js",["133","134"],"import React, { useState, useEffect } from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport \"./FilterForm.css\"\r\nfunction FilterForm(props) {\r\n    const filterForm = {\r\n        Gender: ['Men', 'Women', 'Unisex'],\r\n        Brand: ['Nike', 'Puma', 'Adidas', 'Rebook'],\r\n        Price: ['0-25', '25-50', '50-100', '100-150', '150-10000'],\r\n        Categories: ['Soccer', 'Training', 'Basketball', 'Running', 'Football']\r\n    }\r\n    const [categories, setCategories] = useState({\r\n        Soccer: false,\r\n        Training: false,\r\n        Basketball: false,\r\n        Running: false,\r\n        Football: false\r\n    })\r\n    const CategoryStyle = {\r\n        color: 'rgb(114, 114, 114)'\r\n    }\r\n    const handleCategories = (e) => {\r\n        let newCategories = { ...categories }\r\n        let passCategory = {\r\n            target: {\r\n                name: \"categories\",\r\n                value: \"\"\r\n            }\r\n        }\r\n        if (newCategories[e.target.className.split(\" \")[1]] == true) {\r\n            for (let i in newCategories) {\r\n                newCategories[i] = false\r\n            }\r\n\r\n        }\r\n        else {\r\n            for (let i in newCategories) {\r\n                newCategories[i] = false\r\n            }\r\n            newCategories[e.target.className.split(\" \")[1]] = true;\r\n            passCategory.target.value = e.target.className.split(\" \")[1]\r\n        }\r\n        console.log(passCategory)\r\n        props.filterHandle(passCategory)\r\n        setCategories(newCategories)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`filter`}\r\n            style={window.screen.width < 1000 ? props.filterStyle : {}}\r\n        >\r\n            <AiOutlineClose className='close-btn' onClick={() => props.closeFilter()} />\r\n            <div className='filter__line first__filter__line'>\r\n                <p>Gender</p>\r\n                {\r\n                    filterForm.Gender.map(value => (\r\n                        <FormControlLabel\r\n                            key={value}\r\n                            control={\r\n                                <Checkbox\r\n                                    size={window.screen.width > 1000 ? \"big\" : \"medium\"}\r\n                                    color=\"primary\"\r\n                                    type='checkbox' value={value}\r\n                                    name='gender' className=\"checkbox\"\r\n                                    onChange={(e) => props.filterHandle(e)}\r\n                                />\r\n                            }\r\n                            label={value}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className='filter__line'>\r\n                <p>Brand</p>\r\n                {\r\n                    filterForm.Brand.map(value => (\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    size={window.screen.width > 1000 ? \"big\" : \"medium\"}\r\n                                    color=\"primary\"\r\n                                    type='checkbox' value={value}\r\n                                    name='brand' className=\"checkbox\"\r\n                                    onChange={(e) => props.filterHandle(e)}\r\n                                />\r\n                            }\r\n                            label={value}\r\n                            key={value}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className='filter__line'>\r\n                <p>Shop by Price</p>\r\n                {filterForm.Price.map(value => (\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                size={window.screen.width > 1000 ? \"big\" : \"medium\"}\r\n                                color=\"primary\"\r\n                                type='checkbox' value={value.split('-')}\r\n                                name='price' className=\"checkbox\"\r\n                                onChange={(e) => props.filterHandle(e)}\r\n                            />\r\n                        }\r\n                        label={value.split('-').map(price => '$' + price).join('-')}\r\n                        key={value}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className='filter__line category'>\r\n                {Object.keys(categories).map((category) => (\r\n                    <div\r\n                        className={`categories ${category}`} key={category}\r\n                        type='radio' name='categories'\r\n                        onClick={(e) => handleCategories(e)}\r\n                        style={categories[category] ? CategoryStyle : {}}>\r\n                        {category}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterForm\r\n","C:\\project\\shoes_selling\\src\\helper\\filter.js",["135"],"class filter {\r\n    gender = []\r\n    brand = []\r\n    price = []\r\n    category = ''\r\n    handlerFilterFormChange(filterName, filterValue) {\r\n        switch (filterName) {\r\n            case 'gender':\r\n                this.gender.indexOf(filterValue) < 0 ?\r\n                    this.gender.push(filterValue) :\r\n                    this.gender.splice(this.gender.indexOf(filterValue), 1)\r\n                break;\r\n            case 'brand':\r\n                this.brand.indexOf(filterValue) < 0 ?\r\n                    this.brand.push(filterValue) :\r\n                    this.brand.splice(this.brand.indexOf(filterValue), 1)\r\n                break;\r\n            case 'price':\r\n                const priceArr = filterValue.split(',').map(price => +price)\r\n                console.log(this.price.some(priceList => JSON.stringify(priceList) === JSON.stringify(priceArr)))\r\n                console.log(this.price.map(price => JSON.stringify(price)))\r\n\r\n                this.price.some(priceList => JSON.stringify(priceList) === JSON.stringify(priceArr)) ?\r\n                    this.price = this.price.filter(price => JSON.stringify(price) !== JSON.stringify(priceArr)) :\r\n                    this.price.push(priceArr)\r\n                break;\r\n            case 'categories':\r\n                this.category === filterValue ?\r\n                    this.category = '' :\r\n                    this.category = filterValue\r\n        }\r\n    }\r\n}\r\n\r\nexport default new filter()","C:\\project\\shoes_selling\\src\\UI\\Button.js",[],"C:\\project\\shoes_selling\\src\\helper\\cart.js",[],"C:\\project\\shoes_selling\\src\\helper\\list.js",["136"],"class list {\r\n    _list\r\n    constructor() {\r\n        this._list = []\r\n    }\r\n\r\n    findItemIndex = function (product) {\r\n        const cartsID = this._list.map(item => item.id)\r\n        return cartsID.indexOf(product.id)\r\n    }\r\n\r\n\r\n    addToList = function (product, img = '') {\r\n        if (this._list.some(item => item.id == product.id)) {\r\n            this.increaseQuantity(product)\r\n        }\r\n        else {\r\n            this._list.push({\r\n                id: product.id + \"_\" + img,\r\n                product: {\r\n                    name: product.product.name,\r\n                    description: product.product.description,\r\n                    gender: product.product.gender,\r\n                    category: product.product.category,\r\n                    //for cart there only one img per product\r\n                    //for favorite there are multiple img per product\r\n                    img: img !== '' ? product.product.img[img] : product.product.img,\r\n                    price: product.product.price,\r\n                    quantity: 1\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    removeFromList = function (product) {\r\n        this._list.splice(this.findItemIndex(product), 1);\r\n    }\r\n\r\n    increaseQuantity = function (product) {\r\n        this._list[this.findItemIndex(product)].product.quantity += 1\r\n    }\r\n    decreaseQuantity = function (product) {\r\n        const item = this._list[this.findItemIndex(product)]\r\n        //if quantity of product is decreased to zero remove product from list\r\n        if (item.product.quantity > 0)\r\n            item.product.quantity -= 1\r\n        else\r\n            this.removeFromList(product)\r\n    }\r\n}\r\n\r\nexport default list","C:\\project\\shoes_selling\\src\\helper\\controller.js",["137","138","139"],"import cart from \"./cart\";\r\nimport favorite from \"./favorite\";\r\nimport { db } from \"../firebase\";\r\n\r\n\r\nconst _filterByGender = function (product, genderList) {\r\n    if (genderList.length == 0) return product;\r\n    return product.filter(item => genderList.indexOf(item.product.gender) > -1)\r\n}\r\n\r\nconst _filterByBrand = function (product, brandList) {\r\n    if (brandList.length == 0) return product;\r\n    console.log(brandList)\r\n    return product.filter(item => brandList.indexOf(item.product.brand) > -1)\r\n}\r\nconst _filterByPrice = function (product, priceList) {\r\n    //console.log(priceList)\r\n    if (priceList.length == 0) return product;\r\n\r\n    return product.filter(item => {\r\n        return priceList.some(([minPrice, maxPrice]) => minPrice <= item.product.price && maxPrice >= item.product.price)\r\n    })\r\n}\r\n\r\nconst _filterByCategories = function (product, category) {\r\n    if (category === '') return product;\r\n    return product.filter(item => item.product.category === category)\r\n}\r\n\r\nexport const filterProduct = function (product, genderList, brandList, priceList, category) {\r\n    let newProduct = product\r\n    newProduct = _filterByGender(newProduct, genderList)\r\n    newProduct = _filterByBrand(newProduct, brandList)\r\n    newProduct = _filterByPrice(newProduct, priceList)\r\n    newProduct = _filterByCategories(newProduct, category)\r\n\r\n    return newProduct\r\n}\r\n\r\nexport const getProduct = (collection, handler) => {\r\n\r\n    db.collection(collection).onSnapshot((snapshot) => {\r\n        let tempData = []\r\n        tempData = snapshot.docs.map((doc) => (\r\n            {\r\n                id: doc.id,\r\n                product: doc.data()\r\n            }\r\n        ))\r\n        handler([...tempData])\r\n    })\r\n}\r\n\r\nexport const addProduct = (product, img = '', collection) => {\r\n    if (collection === 'cart')\r\n        cart.addToList(product, img)\r\n    if (collection === 'favorite')\r\n        favorite.addToList(product, img)\r\n}\r\nexport const removeProduct = (product, collection) => {\r\n    if (collection === 'cart')\r\n        cart.removeFromList(product)\r\n    if (collection === 'favorite')\r\n        favorite.removeFromList(product)\r\n}\r\n\r\nexport const getFavoriteList = () => {\r\n    return favorite._list\r\n}","C:\\project\\shoes_selling\\src\\helper\\favorite.js",["140"],"import list from './list'\r\n\r\nclass favorite extends list {\r\n    getDiscountCode = function () {\r\n        const randomCode = Math.floor(Math.random() * 3)\r\n        switch (randomCode) {\r\n            case 0: return 'discount10'\r\n            case 1: return ''\r\n            case 2: return 'discount20'\r\n        }\r\n    }\r\n}\r\nexport default new favorite()",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":14,"column":9,"nodeType":"147","messageId":"148","endLine":14,"endColumn":10},{"ruleId":"149","severity":1,"message":"150","line":55,"column":33,"nodeType":"151","messageId":"152","endLine":55,"endColumn":35},{"ruleId":"149","severity":1,"message":"153","line":79,"column":67,"nodeType":"151","messageId":"152","endLine":79,"endColumn":69},{"ruleId":"149","severity":1,"message":"150","line":101,"column":20,"nodeType":"151","messageId":"152","endLine":101,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":104,"column":20,"nodeType":"151","messageId":"152","endLine":104,"endColumn":22},{"ruleId":"145","severity":1,"message":"154","line":109,"column":9,"nodeType":"147","messageId":"148","endLine":109,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":118,"column":7,"nodeType":"157","messageId":"158","endLine":126,"endColumn":8},{"ruleId":"159","severity":1,"message":"160","line":124,"column":9,"nodeType":"161","messageId":"162","endLine":125,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":138,"column":13,"nodeType":"165","endLine":138,"endColumn":125},{"ruleId":"145","severity":1,"message":"166","line":4,"column":7,"nodeType":"147","messageId":"148","endLine":4,"endColumn":21},{"ruleId":"141","replacedBy":"167"},{"ruleId":"143","replacedBy":"168"},{"ruleId":"149","severity":1,"message":"153","line":17,"column":25,"nodeType":"151","messageId":"152","endLine":17,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":53,"column":33,"nodeType":"165","endLine":53,"endColumn":97},{"ruleId":"163","severity":1,"message":"164","line":37,"column":41,"nodeType":"165","endLine":38,"endColumn":86},{"ruleId":"163","severity":1,"message":"164","line":41,"column":21,"nodeType":"165","endLine":41,"endColumn":93},{"ruleId":"163","severity":1,"message":"164","line":52,"column":33,"nodeType":"165","endLine":55,"endColumn":119},{"ruleId":"149","severity":1,"message":"150","line":55,"column":85,"nodeType":"151","messageId":"152","endLine":55,"endColumn":87},{"ruleId":"163","severity":1,"message":"164","line":37,"column":29,"nodeType":"165","endLine":37,"endColumn":61},{"ruleId":"149","severity":1,"message":"150","line":21,"column":88,"nodeType":"151","messageId":"152","endLine":21,"endColumn":90},{"ruleId":"169","severity":1,"message":"170","line":27,"column":8,"nodeType":"171","endLine":27,"endColumn":10,"suggestions":"172"},{"ruleId":"149","severity":1,"message":"150","line":44,"column":20,"nodeType":"151","messageId":"152","endLine":44,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":80,"column":49,"nodeType":"165","endLine":80,"endColumn":85},{"ruleId":"145","severity":1,"message":"173","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":74,"column":49,"nodeType":"151","messageId":"152","endLine":74,"endColumn":51},{"ruleId":"145","severity":1,"message":"174","line":30,"column":11,"nodeType":"147","messageId":"148","endLine":30,"endColumn":28},{"ruleId":"163","severity":1,"message":"164","line":54,"column":29,"nodeType":"165","endLine":55,"endColumn":31},{"ruleId":"145","severity":1,"message":"173","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":31,"column":61,"nodeType":"151","messageId":"152","endLine":31,"endColumn":63},{"ruleId":"155","severity":1,"message":"156","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":31,"endColumn":10},{"ruleId":"149","severity":1,"message":"150","line":14,"column":45,"nodeType":"151","messageId":"152","endLine":14,"endColumn":47},{"ruleId":"149","severity":1,"message":"150","line":7,"column":27,"nodeType":"151","messageId":"152","endLine":7,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":12,"column":26,"nodeType":"151","messageId":"152","endLine":12,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":18,"column":26,"nodeType":"151","messageId":"152","endLine":18,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":6,"column":9,"nodeType":"157","messageId":"158","endLine":10,"endColumn":10},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'getProduct' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firebaseConfig' is assigned a value but never used.",["175"],["176"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'useEffect' is defined but never used.","'checkFavoriteList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [getProduct]",{"range":"180","text":"181"},[866,868],"[getProduct]"]